datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                     String    @id @default(uuid())
  email                  String    @unique
  username               String    @unique
  fullName               String?   @map("full_name")
  password               String?
  createdAt              DateTime  @default(now()) @map("created_at")
  updatedAt              DateTime  @updatedAt @map("updated_at")
  profileUrl             String?   @map("profile_url")
  roleId                 String?   @map("role_id")
  isDeleted              Boolean   @default(false) @map("is_deleted")
  deletedAt              DateTime? @map("deleted_at")
  emailVerifiedAt        DateTime? @map("email_verified_at")
  emailVerificationToken String?   @map("email_verification_token")
  isEmailVerified        Boolean   @default(false) @map("is_email_verified")

  role Role? @relation(fields: [roleId], references: [id])

  @@map("users")
}

model Role {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  permissions Permission[]
  user        User[]

  @@map("roles")
}

model Module {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  actions Action[]

  @@map("modules")
}

model Action {
  id        String   @id @default(uuid())
  name      String
  moduleId  String   @map("module_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  module Module @relation(fields: [moduleId], references: [id])

  @@unique([moduleId, name])
  @@map("actions")
}

model Permission {
  id        String   @id @default(uuid())
  roleId    String   @map("role_id")
  module    String   @map("module")
  action    String   @map("action")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  Role Role @relation(fields: [roleId], references: [id])

  @@unique([roleId, module, action])
  @@map("permissions")
}

model Product {
  id        String   @id @default(uuid())
  name      String
  price     Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isDeleted Boolean  @default(false) @map("is_deleted")
  createdBy String   @map("created_by")
  updatedBy String   @map("updated_by")
  deletedBy String   @map("deleted_by")

  @@map("products")
}
