datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         String   @id @default(uuid())
  email      String   @unique
  username   String   @unique
  fullName   String?  @map("full_name")
  password   String?
  isDeleted  Boolean  @default(false) @map("is_deleted")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  profileUrl String?  @map("profile_url")
  roleId     String?  @map("role_id")

  role    Role?     @relation(fields: [roleId], references: [id])
  Message Message[]

  @@map("users")
}

model ChatRoom {
  id        String    @id @default(uuid())
  name      String
  userList  String    @map("user_list")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  messages  Message[]

  @@map("chat_rooms")
}

model Message {
  id         String   @id @default(uuid())
  message    String
  userId     String
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  chatRoomId String   @map("chat_room_id")
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id])

  user User @relation(fields: [userId], references: [id])

  @@map("messages")
}

model Role {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  permissions Permission[]
  user        User[]

  @@map("roles")
}

model Module {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  actions Action[]

  @@map("modules")
}

model Action {
  id        String   @id @default(uuid())
  name      String
  moduleId  String   @map("module_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  module Module @relation(fields: [moduleId], references: [id])

  @@unique([moduleId, name])
  @@map("actions")
}

model Permission {
  id        String   @id @default(uuid())
  roleId    String   @map("role_id")
  module    String   @map("module")
  action    String   @map("action")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  Role Role @relation(fields: [roleId], references: [id])

  @@unique([roleId, module, action])
  @@map("permissions")
}
